name: Resume Deployment

on:
  # Trigger the workflow on push to the dev0 branch
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: [gcp-server]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: master

    - name: Grab the code
      run: |
        cd /home/zubairhassan652/portfolio
        git pull origin master
    
    - name: Install python packages
      run: |
        cd /home/zubairhassan652/portfolio
        source venv/bin/activate
        cd /home/zubairhassan652/portfolio
        python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi    
        
    - name: Update database and collect static files
      run: |
        cd /home/zubairhassan652/portfolio
        source venv/bin/activate
        cd /home/zubairhassan652/portfolio
        python3 manage.py migrate
        python3 manage.py collectstatic --no-input
    
    - name: Test Coverage and Linting 
      run: |
        cd /home/zubairhassan652/portfolio
        source venv/bin/activate
        cd /home/zubairhassan652/portfolio
        coverage run --source=backend manage.py test
        coverage report --omit=*test*,*apps.py*,*seeder*,*__init__.py*,*migrations*
        pylint --rcfile=.pylintrc backend/ || exit 0
    
    - name: Restart Supervisor
      run: |
        sudo systemctl restart gunicorn
    
      # sudo supervisorctl restart all

        
# sudo systemctl restart gunicorn
# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# name: Python application

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python 3.8
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
